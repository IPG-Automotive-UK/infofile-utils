// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`getDouble tests can get a double value 1`] = `
Object {
  "key": "WheelCarrier.fl.mass",
  "value": 18,
}
`;

exports[`getDouble tests can get a double value for a key that does not exist 1`] = `
Object {
  "key": "RandomKey",
  "value": NaN,
}
`;

exports[`getDouble tests can get an array of double values 1`] = `
Array [
  Object {
    "key": "WheelCarrier.fl.mass",
    "value": 18,
  },
  Object {
    "key": "SuspF.Spring.l0",
    "value": 0.3541,
  },
]
`;

exports[`getDouble tests can get an array of double values where one key does not exist 1`] = `
Array [
  Object {
    "key": "SuspF.Spring.l0",
    "value": 0.3541,
  },
  Object {
    "key": "RandomKey",
    "value": NaN,
  },
]
`;

exports[`getKeyValues tests can get a key where key the key value is a number 1`] = `
Object {
  "key": "SuspF.Spring.l0",
  "value": 0.3541,
}
`;

exports[`getKeyValues tests can get a key where keyValue is a multiline string 1`] = `
Object {
  "key": "Description",
  "value": Array [
    "Typical, unvalidated data for passenger car",
    "with Front Wheel Drive",
    "Tire: RT 195/65 R15",
  ],
}
`;

exports[`getKeyValues tests can get a key where keyValue is a string 1`] = `
Object {
  "key": "SuspF.Spring.Kind",
  "value": "Hookean 1",
}
`;

exports[`getKeyValues tests can get a key where keys are an array with differnt keyValue types 1`] = `
Array [
  Object {
    "key": "SuspF.Spring.Kind",
    "value": "Hookean 1",
  },
  Object {
    "key": "SuspF.Spring.l0",
    "value": 0.3541,
  },
  Object {
    "key": "Aero.Marker.pos",
    "value": Array [
      4.28,
      0,
      0.6,
    ],
  },
  Object {
    "key": "Aero.Coeff",
    "value": Array [
      Array [
        -180,
        -0.4,
        0,
        0.1,
        0,
        -0.01,
        0,
      ],
      Array [
        -120,
        -0.2,
        -1.4,
        0.7,
        -0.2,
        -0.021,
        0.06,
      ],
      Array [
        -90,
        0,
        -1.7,
        0.9,
        -0.2,
        0,
        0,
      ],
      Array [
        -45,
        0.3,
        -1.2,
        0.6,
        -0.16,
        0.025,
        -0.1,
      ],
      Array [
        0,
        0.2,
        0,
        0.1,
        0,
        -0.03,
        0,
      ],
      Array [
        45,
        0.3,
        1.2,
        0.6,
        0.16,
        0.025,
        0.1,
      ],
      Array [
        90,
        0,
        1.7,
        0.9,
        0.2,
        0,
        0,
      ],
      Array [
        120,
        -0.2,
        1.4,
        0.7,
        0.2,
        -0.021,
        -0.06,
      ],
      Array [
        180,
        -0.4,
        0,
        0.1,
        0,
        -0.01,
        0,
      ],
    ],
  },
]
`;

exports[`getKeyValues tests can get a key where the key value is a matrix 1`] = `
Object {
  "key": "Aero.Coeff",
  "value": Array [
    Array [
      -180,
      -0.4,
      0,
      0.1,
      0,
      -0.01,
      0,
    ],
    Array [
      -120,
      -0.2,
      -1.4,
      0.7,
      -0.2,
      -0.021,
      0.06,
    ],
    Array [
      -90,
      0,
      -1.7,
      0.9,
      -0.2,
      0,
      0,
    ],
    Array [
      -45,
      0.3,
      -1.2,
      0.6,
      -0.16,
      0.025,
      -0.1,
    ],
    Array [
      0,
      0.2,
      0,
      0.1,
      0,
      -0.03,
      0,
    ],
    Array [
      45,
      0.3,
      1.2,
      0.6,
      0.16,
      0.025,
      0.1,
    ],
    Array [
      90,
      0,
      1.7,
      0.9,
      0.2,
      0,
      0,
    ],
    Array [
      120,
      -0.2,
      1.4,
      0.7,
      0.2,
      -0.021,
      -0.06,
    ],
    Array [
      180,
      -0.4,
      0,
      0.1,
      0,
      -0.01,
      0,
    ],
  ],
}
`;

exports[`getKeyValues tests can get a key where the key value is a vector 1`] = `
Object {
  "key": "Aero.Marker.pos",
  "value": Array [
    4.28,
    0,
    0.6,
  ],
}
`;

exports[`getLong tests can get a long value 1`] = `
Object {
  "key": "Body.mass",
  "value": 1301,
}
`;

exports[`getLong tests can get a long value for a key that does not exist 1`] = `
Object {
  "key": "RandomKey",
  "value": NaN,
}
`;

exports[`getLong tests can get an array of long values 1`] = `
Array [
  Object {
    "key": "Body.mass",
    "value": 1301,
  },
  Object {
    "key": "nAxle",
    "value": 2,
  },
]
`;

exports[`getLong tests can get an array of long values where one key does not exist 1`] = `
Array [
  Object {
    "key": "Aero.Crosswind.Kind",
    "value": 0,
  },
  Object {
    "key": "RandomKey",
    "value": NaN,
  },
]
`;

exports[`getString tests can get a string value 1`] = `
Object {
  "key": "Aero.Crosswind.Kind",
  "value": "Step",
}
`;

exports[`getString tests can get a string value for a key that does not exist 1`] = `
Object {
  "key": "RandomKey",
  "value": "",
}
`;

exports[`getString tests can get an array of string values 1`] = `
Array [
  Object {
    "key": "Aero.Crosswind.Kind",
    "value": "Step",
  },
  Object {
    "key": "Aero.Kind",
    "value": "Coeff6x1 1",
  },
]
`;

exports[`getString tests can get an array of string values where one key does not exist 1`] = `
Array [
  Object {
    "key": "Aero.Crosswind.Kind",
    "value": "Step",
  },
  Object {
    "key": "RandomKey",
    "value": "",
  },
]
`;

exports[`getText tests can get a text value 1`] = `
Object {
  "key": "Description",
  "value": Array [
    "Typical, unvalidated data for passenger car",
    "with Front Wheel Drive",
    "Tire: RT 195/65 R15",
  ],
}
`;

exports[`getText tests can get a text value for a key that does not exist 1`] = `
Object {
  "key": "RandomKey",
  "value": Array [],
}
`;

exports[`getText tests can get an array of text values 1`] = `
Array [
  Object {
    "key": "Description",
    "value": Array [
      "Typical, unvalidated data for passenger car",
      "with Front Wheel Drive",
      "Tire: RT 195/65 R15",
    ],
  },
  Object {
    "key": "Aero.Coeff",
    "value": Array [
      "-180 -0.4 0.0 0.1 0.0 -0.01 0.0",
      "-120 -0.2 -1.4 0.7 -0.2 -0.021 0.06",
      "-90 0.0 -1.7 0.9 -0.2 0.0 0.0",
      "-45 0.3 -1.2 0.6 -0.16 0.025 -0.1",
      "0 0.2 0.0 0.1 0.0 -0.03 0.0",
      "45 0.3 1.2 0.6 0.16 0.025 0.1",
      "90 0.0 1.7 0.9 0.2 0.000 0.0",
      "120 -0.2 1.4 0.7 0.2 -0.021 -0.06",
      "180 -0.4 0.0 0.1 0.0 -0.010 0.0",
    ],
  },
]
`;

exports[`getText tests can get an array of text values where one key does not exist 1`] = `
Array [
  Object {
    "key": "Description",
    "value": Array [
      "Typical, unvalidated data for passenger car",
      "with Front Wheel Drive",
      "Tire: RT 195/65 R15",
    ],
  },
  Object {
    "key": "RandomKey",
    "value": Array [],
  },
]
`;

exports[`listKey tests can get all aero keys from infofile 1`] = `
Array [
  "Aero.Ax",
  "Aero.Coeff",
  "Aero.Crosswind.Kind",
  "Aero.Kind",
  "Aero.Marker.pos",
  "Aero.lReference",
  "Aero.pos",
]
`;

exports[`listKey tests can get all list keys from infofile 1`] = `
Array [
  "Additional.Comment",
  "Aero.Ax",
  "Aero.Coeff",
  "Aero.Crosswind.Kind",
  "Aero.Kind",
  "Aero.Marker.pos",
  "Aero.lReference",
  "Aero.pos",
  "Assembly.Comment",
  "AxleR.TwinTiresOn",
  "Body.I",
  "Body.mass",
  "Body.pos",
  "Brake.Comment",
  "Brake.Control.Kind",
  "Brake.Control.Mode",
  "Brake.Kind",
  "Brake.System.FName",
  "Brake.Torque.Amplify",
  "Crypto.AllowAccess",
  "Crypto.Show",
  "Description",
  "Eng.Joint.pos",
  "Eng.Kind",
  "Eng.Orientation",
  "FileCreator",
  "FileIdent",
  "Flex.JointFr1Fr1B.Kind",
  "Flex.JointFr1Fr1B.d.x.Amplify",
  "Flex.JointFr1Fr1B.d.x",
  "Flex.JointFr1Fr1B.d.y.Amplify",
  "Flex.JointFr1Fr1B.d.y",
  "Flex.JointFr1Fr1B.k.x.Amplify",
  "Flex.JointFr1Fr1B.k.x",
  "Flex.JointFr1Fr1B.k.y.Amplify",
  "Flex.JointFr1Fr1B.k.y",
  "Flex.JointFr1Fr1B.pos",
  "Hitch.System",
  "Hitch.pos",
  "Jack.fl.pos",
  "Jack.fr.pos",
  "Jack.rl.pos",
  "Jack.rr.pos",
  "Movie.Skin.FName",
  "Picture.PicFName",
  "PowerTrain.BCU.Kind",
  "PowerTrain.Clutch.ConnectPos",
  "PowerTrain.Clutch.DisconnectPos",
  "PowerTrain.Clutch.I_in",
  "PowerTrain.Clutch.I_out",
  "PowerTrain.Clutch.Kind",
  "PowerTrain.Clutch.Trq_max",
  "PowerTrain.Clutch.c.Kind",
  "PowerTrain.Clutch.c",
  "PowerTrain.Clutch.slope",
  "PowerTrain.Comment",
  "PowerTrain.Control.GasInterpret.Active",
  "PowerTrain.Control.Kind",
  "PowerTrain.Control.StartEngineWithSST",
  "PowerTrain.ControlOSM.Kind",
  "PowerTrain.DL.FDiff.Cpl.Kind",
  "PowerTrain.DL.FDiff.Cpl.Mounting",
  "PowerTrain.DL.FDiff.Cpl.Trq_Amplify",
  "PowerTrain.DL.FDiff.Cpl.Trq_drotv",
  "PowerTrain.DL.FDiff.Cpl.k",
  "PowerTrain.DL.FDiff.Eta",
  "PowerTrain.DL.FDiff.I_Cage",
  "PowerTrain.DL.FDiff.I_in",
  "PowerTrain.DL.FDiff.I_out",
  "PowerTrain.DL.FDiff.i",
  "PowerTrain.DL.FlexShaft",
  "PowerTrain.DL.Kind",
  "PowerTrain.DL.TrqExt2DiffOn",
  "PowerTrain.DL.TrqExt2WheelOn",
  "PowerTrain.ECU.ISCtrl.Active",
  "PowerTrain.ECU.ISCtrl.LoadMax",
  "PowerTrain.ECU.ISCtrl.i",
  "PowerTrain.ECU.ISCtrl.p",
  "PowerTrain.ECU.ISCtrl.rotvOff",
  "PowerTrain.ECU.Kind",
  "PowerTrain.ECU.RotvCtrl.i",
  "PowerTrain.ECU.RotvCtrl.p",
  "PowerTrain.ECU.TrqCtrl.i",
  "PowerTrain.ECU.TrqCtrl.p",
  "PowerTrain.ECU.nFuelCutOff",
  "PowerTrain.Engine.Bdy.I",
  "PowerTrain.Engine.Bdy.Mounting",
  "PowerTrain.Engine.Bdy.Ori",
  "PowerTrain.Engine.Bdy.RefFr",
  "PowerTrain.Engine.Bdy.mass",
  "PowerTrain.Engine.Bdy.pos",
  "PowerTrain.Engine.Crankshaft.Orientation",
  "PowerTrain.Engine.DragPower.Amplify",
  "PowerTrain.Engine.DragPower",
  "PowerTrain.Engine.Exponent",
  "PowerTrain.Engine.FuelConsume",
  "PowerTrain.Engine.FuelDensity",
  "PowerTrain.Engine.FuelHeatValue",
  "PowerTrain.Engine.FuelLevel",
  "PowerTrain.Engine.FuelMap.Amplify",
  "PowerTrain.Engine.FuelMap.Data",
  "PowerTrain.Engine.FuelMap.Kind",
  "PowerTrain.Engine.FullLoadPower.Amplify",
  "PowerTrain.Engine.FullLoadPower",
  "PowerTrain.Engine.I",
  "PowerTrain.Engine.IMP.Active",
  "PowerTrain.Engine.Kind",
  "PowerTrain.Engine.Mapping.Kind",
  "PowerTrain.Engine.PwrCorr.Active",
  "PowerTrain.Engine.Tank.Bdy.I",
  "PowerTrain.Engine.Tank.Bdy.Mounting",
  "PowerTrain.Engine.Tank.Bdy.Ori",
  "PowerTrain.Engine.Tank.Bdy.RefFr",
  "PowerTrain.Engine.Tank.Bdy.mass",
  "PowerTrain.Engine.Tank.Bdy.pos",
  "PowerTrain.Engine.TankVolume",
  "PowerTrain.Engine.TrqKl15Off",
  "PowerTrain.Engine.Turbo.Active",
  "PowerTrain.Engine.nIdle",
  "PowerTrain.Engine.rotvOff",
  "PowerTrain.Engine.tBuildUp",
  "PowerTrain.GearBox.Bdy.I",
  "PowerTrain.GearBox.Bdy.Mounting",
  "PowerTrain.GearBox.Bdy.Ori",
  "PowerTrain.GearBox.Bdy.RefFr",
  "PowerTrain.GearBox.Bdy.mass",
  "PowerTrain.GearBox.Bdy.pos",
  "PowerTrain.GearBox.EtaBackwardGears",
  "PowerTrain.GearBox.EtaForwardGears",
  "PowerTrain.GearBox.I_in",
  "PowerTrain.GearBox.I_out",
  "PowerTrain.GearBox.Kind",
  "PowerTrain.GearBox.LossKind",
  "PowerTrain.GearBox.iBackwardGears",
  "PowerTrain.GearBox.iForwardGears",
  "PowerTrain.GearBox.nFit",
  "PowerTrain.GearBoxM.Bdy.Mounting",
  "PowerTrain.GearBoxM.Bdy.Ori",
  "PowerTrain.GearBoxM.Bdy.RefFr",
  "PowerTrain.GearBoxM.Bdy.pos",
  "PowerTrain.GearBoxM1.Bdy.Mounting",
  "PowerTrain.GearBoxM1.Bdy.Ori",
  "PowerTrain.GearBoxM1.Bdy.RefFr",
  "PowerTrain.GearBoxM1.Bdy.pos",
  "PowerTrain.GearBoxM2.Bdy.Mounting",
  "PowerTrain.GearBoxM2.Bdy.Ori",
  "PowerTrain.GearBoxM2.Bdy.RefFr",
  "PowerTrain.GearBoxM2.Bdy.pos",
  "PowerTrain.GearBoxM3.Bdy.Mounting",
  "PowerTrain.GearBoxM3.Bdy.Ori",
  "PowerTrain.GearBoxM3.Bdy.RefFr",
  "PowerTrain.GearBoxM3.Bdy.pos",
  "PowerTrain.Kind",
  "PowerTrain.MCU.Kind",
  "PowerTrain.MCU.MotorISG.RotvCtrl.i",
  "PowerTrain.MCU.MotorISG.RotvCtrl.p",
  "PowerTrain.MCU.MotorISG.TrqCtrl.i",
  "PowerTrain.MCU.MotorISG.TrqCtrl.p",
  "PowerTrain.Motor.Bdy.Mounting",
  "PowerTrain.Motor.Bdy.Ori",
  "PowerTrain.Motor.Bdy.RefFr",
  "PowerTrain.Motor.Bdy.pos",
  "PowerTrain.Motor1.Bdy.Mounting",
  "PowerTrain.Motor1.Bdy.Ori",
  "PowerTrain.Motor1.Bdy.RefFr",
  "PowerTrain.Motor1.Bdy.pos",
  "PowerTrain.Motor2.Bdy.Mounting",
  "PowerTrain.Motor2.Bdy.Ori",
  "PowerTrain.Motor2.Bdy.RefFr",
  "PowerTrain.Motor2.Bdy.pos",
  "PowerTrain.Motor3.Bdy.Mounting",
  "PowerTrain.Motor3.Bdy.Ori",
  "PowerTrain.Motor3.Bdy.RefFr",
  "PowerTrain.Motor3.Bdy.pos",
  "PowerTrain.MotorISG.I",
  "PowerTrain.MotorISG.Kind",
  "PowerTrain.MotorISG.Pwr_max",
  "PowerTrain.MotorISG.Ratio",
  "PowerTrain.MotorISG.Trq_max",
  "PowerTrain.MotorISG.VoltageLevel",
  "PowerTrain.MotorISG.rotv_max",
  "PowerTrain.OSRate",
  "PowerTrain.PowerSupply.BattHV.Bdy.0.Mounting",
  "PowerTrain.PowerSupply.BattHV.Bdy.0.Ori",
  "PowerTrain.PowerSupply.BattHV.Bdy.0.RefFr",
  "PowerTrain.PowerSupply.BattHV.Bdy.0.pos",
  "PowerTrain.PowerSupply.BattHV.Bdy.1.Mounting",
  "PowerTrain.PowerSupply.BattHV.Bdy.1.Ori",
  "PowerTrain.PowerSupply.BattHV.Bdy.1.RefFr",
  "PowerTrain.PowerSupply.BattHV.Bdy.1.pos",
  "PowerTrain.PowerSupply.BattLV.Bdy.0.Mounting",
  "PowerTrain.PowerSupply.BattLV.Bdy.0.Ori",
  "PowerTrain.PowerSupply.BattLV.Bdy.0.RefFr",
  "PowerTrain.PowerSupply.BattLV.Bdy.0.pos",
  "PowerTrain.PowerSupply.BattLV.Bdy.1.Mounting",
  "PowerTrain.PowerSupply.BattLV.Bdy.1.Ori",
  "PowerTrain.PowerSupply.BattLV.Bdy.1.RefFr",
  "PowerTrain.PowerSupply.BattLV.Bdy.1.pos",
  "PowerTrain.PowerSupply.Kind",
  "PowerTrain.TCU.Kind",
  "RefPointInputSystem",
  "Sensor.0.Active",
  "Sensor.0.Mounting",
  "Sensor.0.Ref.Cluster",
  "Sensor.0.Ref.Param",
  "Sensor.0.VisColor",
  "Sensor.0.Visualization",
  "Sensor.0.name",
  "Sensor.0.pos",
  "Sensor.0.rot",
  "Sensor.1.Active",
  "Sensor.1.CalcClass",
  "Sensor.1.Mounting",
  "Sensor.1.Ref.Cluster",
  "Sensor.1.Ref.Param",
  "Sensor.1.VisColor",
  "Sensor.1.Visualization",
  "Sensor.1.name",
  "Sensor.1.pos",
  "Sensor.1.rot",
  "Sensor.Comment",
  "Sensor.N",
  "Sensor.Param.0.FName",
  "Sensor.Param.0.Name",
  "Sensor.Param.0.Type",
  "Sensor.Param.1.FName",
  "Sensor.Param.1.Name",
  "Sensor.Param.1.Type",
  "Sensor.Param.N",
  "SensorCluster.N",
  "Steering.Comment",
  "Steering.Kind",
  "Steering.Rack2StWhl",
  "Susp.Comment",
  "SuspControl.Kind",
  "SuspExtFrcs.Kind",
  "SuspF.Buf_Pull.Amplify",
  "SuspF.Buf_Pull.tz0",
  "SuspF.Buf_Pull",
  "SuspF.Buf_Push.Amplify",
  "SuspF.Buf_Push.tz0",
  "SuspF.Buf_Push",
  "SuspF.Buffer.Kind",
  "SuspF.Com.N",
  "SuspF.Damp_Pull.Amplify",
  "SuspF.Damp_Pull",
  "SuspF.Damp_Push.Amplify",
  "SuspF.Damp_Push",
  "SuspF.Damper.Kind",
  "SuspF.Kin.0.FName",
  "SuspF.Kin.N",
  "SuspF.Parasitic.Friction.Kind",
  "SuspF.Parasitic.Stiffness.Kind",
  "SuspF.Spring.Amplify",
  "SuspF.Spring.Kind",
  "SuspF.Spring.l0",
  "SuspF.Spring",
  "SuspF.Stabi.Amplify",
  "SuspF.Stabi.Kind",
  "SuspF.Stabi",
  "SuspF.WhlBearing.On",
  "SuspR.Buf_Pull.Amplify",
  "SuspR.Buf_Pull.tz0",
  "SuspR.Buf_Pull",
  "SuspR.Buf_Push.Amplify",
  "SuspR.Buf_Push.tz0",
  "SuspR.Buf_Push",
  "SuspR.Buffer.Kind",
  "SuspR.Com.N",
  "SuspR.Damp_Pull.Amplify",
  "SuspR.Damp_Pull",
  "SuspR.Damp_Push.Amplify",
  "SuspR.Damp_Push",
  "SuspR.Damper.Kind",
  "SuspR.Kin.0.InputSide",
  "SuspR.Kin.0.Kind",
  "SuspR.Kin.0.L.lBuf",
  "SuspR.Kin.0.L.lDamp",
  "SuspR.Kin.0.L.lSpring",
  "SuspR.Kin.0.L.lStabi",
  "SuspR.Kin.0.L.rx",
  "SuspR.Kin.0.L.ry",
  "SuspR.Kin.0.L.rz",
  "SuspR.Kin.0.L.tx",
  "SuspR.Kin.0.L.ty",
  "SuspR.Kin.0.L.tz",
  "SuspR.Kin.0.ValidSide",
  "SuspR.Kin.N",
  "SuspR.Parasitic.Friction.Kind",
  "SuspR.Parasitic.Stiffness.Kind",
  "SuspR.Spring.Amplify",
  "SuspR.Spring.Kind",
  "SuspR.Spring.l0",
  "SuspR.Spring",
  "SuspR.Stabi.Amplify",
  "SuspR.Stabi.Kind",
  "SuspR.Stabi",
  "SuspR.WhlBearing.On",
  "Tire.0",
  "Tire.1",
  "Tire.2",
  "Tire.3",
  "Tires.Comment",
  "Vehicle.OuterSkin",
  "VehicleControl.0.Kind",
  "VehicleControl.1.Kind",
  "VehicleControl.2.Kind",
  "VehicleControl.3.Kind",
  "VehicleControl.4.Kind",
  "VehicleControl.5.Kind",
  "VehicleControl.6.Kind",
  "VehicleControl.7.Kind",
  "VehicleControl.8.Kind",
  "VehicleControl.9.Kind",
  "VehicleControl.Comment",
  "VehicleModel.Kind",
  "VehicleModel.Mode",
  "VehicleModel",
  "Vhclbody.Comment",
  "Virtual.PoA",
  "Wheel.fl.I",
  "Wheel.fl.mass",
  "Wheel.fl.pos",
  "Wheel.fr.I",
  "Wheel.fr.mass",
  "Wheel.fr.pos",
  "Wheel.rl.I",
  "Wheel.rl.mass",
  "Wheel.rl.pos",
  "Wheel.rr.I",
  "Wheel.rr.mass",
  "Wheel.rr.pos",
  "WheelCarrier.fl.I",
  "WheelCarrier.fl.mass",
  "WheelCarrier.fl.pos",
  "WheelCarrier.fr.I",
  "WheelCarrier.fr.mass",
  "WheelCarrier.fr.pos",
  "WheelCarrier.rl.I",
  "WheelCarrier.rl.mass",
  "WheelCarrier.rl.pos",
  "WheelCarrier.rr.I",
  "WheelCarrier.rr.mass",
  "WheelCarrier.rr.pos",
  "nAxle",
]
`;

exports[`listKey tests can get an array of prefixes with one key that doesn't exist 1`] = `
Array [
  "Aero.Ax",
  "Aero.Coeff",
  "Aero.Crosswind.Kind",
  "Aero.Kind",
  "Aero.Marker.pos",
  "Aero.lReference",
  "Aero.pos",
  "Body.I",
  "Body.mass",
  "Body.pos",
]
`;

exports[`listKey tests can get keys for an array of prefixes 1`] = `
Array [
  "Aero.Ax",
  "Aero.Coeff",
  "Aero.Crosswind.Kind",
  "Aero.Kind",
  "Aero.Marker.pos",
  "Aero.lReference",
  "Aero.pos",
  "Body.I",
  "Body.mass",
  "Body.pos",
]
`;

exports[`listKeyKinds tests can get key kinds for an array of keys 1`] = `
Array [
  Object {
    "key": "Aero.Ax",
    "keyKind": "String_Key",
  },
  Object {
    "key": "Body.I",
    "keyKind": "String_Key",
  },
]
`;

exports[`listKeyKinds tests can get keykind for a key that does not exist 1`] = `
Object {
  "key": "RandomKey",
  "keyKind": "No_Key",
}
`;

exports[`listKeyKinds tests can get keykind for a single key 1`] = `
Object {
  "key": "Aero.Ax",
  "keyKind": "String_Key",
}
`;

exports[`listKeyKinds tests can get keykind for a string key 1`] = `
Object {
  "key": "Aero.Ax",
  "keyKind": "String_Key",
}
`;

exports[`listKeyKinds tests can get keykind for a text key 1`] = `
Object {
  "key": "Description",
  "keyKind": "Text_Key",
}
`;
